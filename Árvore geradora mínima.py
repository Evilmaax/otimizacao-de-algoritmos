from math import sqrt

cidades_x = [0, 11003.611100, 11108.611100, 11133.333300, 11155.833300, 11183.333300, 11297.500000, 11310.277800,
             11416.666700, 11423.888900, 11438.333300, 11461.111100, 11485.555600, 11503.055600, 11511.388900,
             11522.222200, 11569.444400, 11583.333300, 11595.000000,
             11600.000000, 11690.555600, 11715.833300, 11751.111100, 11770.277800,
             11785.277800, 11822.777800, 11846.944400, 11963.055600, 11973.055600, 12058.333300, 12149.444400,
             12286.944400, 12300.000000, 12355.833300, 12363.333300, 12372.777800,
             12386.666700, 12421.666700, 12645.000000]

cidades_y = [0, 42102.500000, 42373.888900, 42885.833300, 42712.500000, 42933.333300, 42853.333300, 42929.444400,
             42983.333300, 43000.277800, 42057.222200, 43252.777800,
             43187.222200, 42855.277800, 42106.388900, 42841.944400, 43136.666700, 43150.000000, 43148.055600,
             43150.000000, 42686.666700, 41836.111100, 42814.444400, 42651.944400,
             42884.444400, 42673.611100, 42660.555600, 43290.555600, 43026.111100, 42195.555600, 42477.500000,
             43355.555600, 42433.333300, 43156.388900, 43189.166700, 42711.388900,
             43334.722200, 42895.555600, 42973.333300]

conexoes = [[], [2, 4, 10, 15, 17], [16, 3, 7, 10, 11], [12, 18, 28, 27, 29], [11, 19, 22, 13, 14, 6, 16], [27, 29, 30],
            [31, 33, 34, 17, 8], [8, 9, 10, 38, 3, 26, 13, 37], [4, 7, 15, 17, 25, 29, 28, 34, 35], [37, 23, 21, 11],
            [21, 23, 24, 38, 22, 17], [5, 4, 2], [1, 19, 29, 27, 26, 36, 34], [33, 32, 23, 26, 26, 28, 19, 21],
            [7, 6, 3, 2, 9], [10, 11, 14], [23], [34, 33, 37, 38], [21, 20, 19], [17, 16, 2, 8], [14, 3, 2, 6],
            [5, 11, 16, 22], [28], [26], [32, 31], [27], [29, 30, 20], [10, 22, 23, 7], [9, 12, 15], [19, 20, 22],
            [11, 23, 29, 12], [23, 33], [27, 17, 14, 16], [16, 2, 7, 8, 9], [10, 9, 15, 28, 38],
            [27, 23, 32, 12, 11, 8], [6, 23, 34, 33, 2, 37], [25, 23, 12, 9], [23, 15, 18, 22]]

nodos_faltando = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                  29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
nodos_prontos = []
resultado = []

print()
print('Algoritmo da árvore geradora mínima - Maximiliano Meyer ')
print()
for c in nodos_faltando:
    prox, peso, temp = 0, 0, 0  # X é nodo, Y é o que alterna
    for x in range(0, len(conexoes[c])):
        temp = sqrt((cidades_x[conexoes[c][x]] - cidades_x[c]) ** 2 + (cidades_y[conexoes[c][x]] - cidades_y[c]) ** 2)
        if temp < peso or peso == 0:
            peso = temp
            prox = conexoes[c][x]
    resultado.append(f'Nodo {c} conecta com {prox} sob um peso de {peso:.2f}')
    nodos_prontos.append(prox)

for x in range(0, len(nodos_prontos)):
    print(resultado[x])
